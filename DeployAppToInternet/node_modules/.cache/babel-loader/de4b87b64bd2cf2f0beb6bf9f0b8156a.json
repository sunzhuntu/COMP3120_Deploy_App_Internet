{"ast":null,"code":"var _jsxFileName = \"/Users/zhusun/Others/MQ-Teaching/Teaching/COMP3120-2020-S2/Program/part2/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport axios from 'axios';\n\nconst Display = ({\n  note,\n  changeImportance\n}) => {\n  const text = note.important ? 'make not important' : 'make important';\n  return /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }\n  }, note.id, \" - \", note.content, \" -\", /*#__PURE__*/React.createElement(\"button\", {\n    onClick: changeImportance,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }, \" \", text));\n};\n\nconst App = () => {\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState('a new note');\n  const [showAll, setShowAll] = useState(true);\n\n  const hook = () => {\n    console.log('effect');\n    axios.get('http://localhost:3001/notes').then(response => {\n      console.log('promoise fulfilled');\n      setNotes(response.data);\n    });\n  };\n\n  useEffect(hook, []);\n\n  const addNote = event => {\n    event.preventDefault();\n    const noteObject = {\n      content: newNote,\n      date: new Date(),\n      important: Math.random() < 0.5\n    };\n    axios.post('http://localhost:3001/notes', noteObject).then(response => {\n      console.log(response);\n      setNotes(notes.concat(response.data));\n      setNewNote('a new note');\n    });\n  };\n\n  const onChangeHandler = event => {\n    console.log(event.target.value);\n    setNewNote(event.target.value);\n  };\n\n  const changeImportant = id => {\n    console.log('the importance of ', id, 'needs to be changed');\n  };\n\n  console.log('render', notes.length, 'notes');\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, \" Display existing notes \"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, notes.map(note => /*#__PURE__*/React.createElement(Display, {\n    key: note.id,\n    note: note,\n    changeImportance: () => changeImportant(note.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, \" Adding new notes \"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: addNote,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: newNote,\n    onChange: onChangeHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, \" save \"))));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/zhusun/Others/MQ-Teaching/Teaching/COMP3120-2020-S2/Program/part2/src/App.js"],"names":["React","useState","useEffect","axios","Display","note","changeImportance","text","important","id","content","App","notes","setNotes","newNote","setNewNote","showAll","setShowAll","hook","console","log","get","then","response","data","addNote","event","preventDefault","noteObject","date","Date","Math","random","post","concat","onChangeHandler","target","value","changeImportant","length","map"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport axios from 'axios'\n\nconst Display = ({note, changeImportance}) => {\n  const text = note.important\n    ? 'make not important'\n    : 'make important'\n  return(\n    <li> \n      {note.id} - {note.content} -\n      <button onClick={changeImportance}> {text}</button>\n    </li>\n\n  )\n}\n \nconst App = () => {\n  const [notes, setNotes] = useState([])\n  const [newNote, setNewNote] = useState('a new note')\n  const [showAll, setShowAll] = useState(true)\n\n  const hook = () => {\n    console.log('effect')\n    axios\n      .get('http://localhost:3001/notes')\n      .then (response => {\n        console.log('promoise fulfilled')\n        setNotes(response.data)\n      })\n  }\n  useEffect(hook, [])\n\n  const addNote = (event) => {\n    event.preventDefault()\n    const noteObject = {\n      content: newNote,\n      date: new Date(),\n      important: Math.random() < 0.5\n    }\n\n    axios\n      .post('http://localhost:3001/notes', noteObject)\n      .then(response => {\n        console.log(response)\n        setNotes(notes.concat(response.data))\n        setNewNote('a new note')\n      })\n  }\n\n  const onChangeHandler = (event) => {\n    console.log(event.target.value)\n    setNewNote(event.target.value)\n  }\n\n  const changeImportant = (id) => {\n    console.log('the importance of ', id, 'needs to be changed')\n  }\n\n  console.log('render', notes.length, 'notes')\n\n  return (\n    <div>\n      <div> \n        <h3> Display existing notes </h3>\n        <ul>\n          {notes.map(note => \n            <Display key={note.id} note={note} changeImportance={() => changeImportant(note.id)}/>\n          )}\n        </ul>\n      </div>\n      <div>\n      <h3> Adding new notes </h3>\n        <form onSubmit={addNote}>\n          <input \n            value={newNote}\n            onChange={onChangeHandler}\n          />\n          <button type=\"submit\"> save </button>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}