{"ast":null,"code":"var _jsxFileName = \"/Users/zhusun/Others/MQ-Teaching/Teaching/COMP3120-2020-S2/Program/part2/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport noteService from './services/notes';\n\nconst Button = ({\n  eventHandler,\n  text\n}) => {\n  const buttonStyle = {\n    backgroundColor: 'white',\n    color: 'black',\n    padding: 4,\n    margin: 4,\n    fontSize: 16,\n    cursor: 'pointer',\n    fontStyle: 'italic',\n    borderRadius: 12\n  };\n  return /*#__PURE__*/React.createElement(\"button\", {\n    style: buttonStyle,\n    onClick: eventHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 10\n    }\n  }, \" \", text, \" \");\n};\n\nconst Display = ({\n  note,\n  changeImportance\n}) => {\n  const text = note.important ? 'make not important' : 'make important';\n  return /*#__PURE__*/React.createElement(\"li\", {\n    className: \"note\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, note.id, \" - \", note.content, \" -\", /*#__PURE__*/React.createElement(Button, {\n    eventHandler: changeImportance,\n    text: text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst Notification = ({\n  message\n}) => {\n  if (message === null) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, message);\n};\n\nconst App = () => {\n  const [products, setProducts] = useState([]);\n  const [newProductId, setNewProductId] = useState('a new product id');\n  const [showAllProducts, setShowAllProducts] = useState(true);\n  const [errorMessage, setErrorMessage] = useState('no error happened...'); //load all existing products from the js-server\n\n  const hook = () => {\n    console.log('effect');\n    noteService.getAll().then(initialNotes => {\n      console.log('promoise fulfilled');\n      setProducts(initialNotes);\n    });\n  };\n\n  useEffect(hook, []); //add new product\n\n  const addProduct = event => {\n    event.preventDefault();\n    console.log('button clicked', event.target);\n    const productObject = {\n      id: newProductId,\n      name: \"Learning Web Design\",\n      category: 'Book'\n    };\n    noteService.createNote(productObject).then(returnedProduct => {\n      console.log(returnedProduct);\n      setProducts(products.concat(returnedProduct));\n      setNewProductId('a new product id');\n    });\n  };\n\n  const handleProductIdChange = event => {\n    console.log(event.target.value);\n    setNewProductId(event.target.value);\n  }; //change the importance of the note\n\n\n  const changeImportantOf = id => {\n    //id = 1000\n    console.log('the importance of ', id, 'needs to be changed');\n    const product = products.find(p => p.id === id);\n    const changedProduct = { ...product,\n      important: !product.important\n    }; //const changedNote = {...note}\n\n    noteService.updateNote(id, changedProduct).then(returnedProduct => {\n      setProducts(products.map(product => product.id !== id ? product : returnedProduct));\n    }).catch(error => {\n      setErrorMessage('the product was already deleted from server');\n      setTimeout(() => {\n        setErrorMessage('no errors happened');\n      }, 5000);\n      setProducts(products.filter(p => p.id !== id));\n    });\n  }; //show products with constraint\n\n\n  const productsToShow = showAllProducts ? products : products.filter(product => product.category === 'Electronics');\n\n  const displayControl = () => {\n    setShowAll(!showAll);\n  };\n\n  console.log('render', products.length, 'products');\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  }, \" Display existing products \"), /*#__PURE__*/React.createElement(Notification, {\n    message: errorMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }, productsToShow.map(product => /*#__PURE__*/React.createElement(Display, {\n    key: product.id,\n    product: product,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }\n  }, \" Adding new products \"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: addProduct,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: newProductId,\n    onChange: handleProductIdChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  }, \" Save \"))));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/zhusun/Others/MQ-Teaching/Teaching/COMP3120-2020-S2/Program/part2/src/App.js"],"names":["React","useState","useEffect","noteService","Button","eventHandler","text","buttonStyle","backgroundColor","color","padding","margin","fontSize","cursor","fontStyle","borderRadius","Display","note","changeImportance","important","id","content","Notification","message","App","products","setProducts","newProductId","setNewProductId","showAllProducts","setShowAllProducts","errorMessage","setErrorMessage","hook","console","log","getAll","then","initialNotes","addProduct","event","preventDefault","target","productObject","name","category","createNote","returnedProduct","concat","handleProductIdChange","value","changeImportantOf","product","find","p","changedProduct","updateNote","map","catch","error","setTimeout","filter","productsToShow","displayControl","setShowAll","showAll","length"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport noteService from './services/notes'\n\n\nconst Button = ({eventHandler, text}) => {\n  const buttonStyle = {\n    backgroundColor: 'white',\n    color: 'black',\n    padding: 4,\n    margin: 4,\n    fontSize: 16,\n    cursor: 'pointer',\n    fontStyle: 'italic',\n    borderRadius: 12\n  }\n  return <button style={buttonStyle} onClick={eventHandler}> {text} </button>\n}\n\n\nconst Display = ({note, changeImportance}) => {\n  const text = note.important\n    ? 'make not important'\n    : 'make important'\n  return(\n    <li className='note'> \n      {note.id} - {note.content} -\n      <Button eventHandler={changeImportance}  text={text}/>\n    </li>\n  )\n}\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n  return (\n    <div className=\"error\">\n      {message}\n    </div>\n  )\n}\n \nconst App = () => {\n  const [products, setProducts] = useState([])\n  const [newProductId, setNewProductId] = useState ('a new product id')\n  const [showAllProducts, setShowAllProducts] = useState(true)\n  const [errorMessage, setErrorMessage] = useState('no error happened...')\n\n  //load all existing products from the js-server\n  const hook = () => {\n    console.log('effect')\n    noteService\n      .getAll()\n      .then (initialNotes => {\n        console.log('promoise fulfilled')\n        setProducts(initialNotes)\n      })\n  }\n  useEffect(hook, [])\n\n  //add new product\n  const addProduct = (event) => {\n    event.preventDefault()\n    console.log('button clicked', event.target)\n    const productObject = {\n      id: newProductId,\n      name: \"Learning Web Design\",\n      category: 'Book'\n    }\n\n    noteService\n      .createNote(productObject)\n      .then(returnedProduct => {\n        console.log(returnedProduct)\n        setProducts(products.concat(returnedProduct))\n        setNewProductId('a new product id')\n    })\n  }\n\n  const handleProductIdChange = (event) => {\n    console.log(event.target.value)\n    setNewProductId(event.target.value)\n  }\n\n  //change the importance of the note\n  const changeImportantOf = (id) => {\n    //id = 1000\n    console.log('the importance of ', id, 'needs to be changed')\n    const product = products.find(p => p.id === id)\n    const changedProduct = {...product, important: !product.important}\n    //const changedNote = {...note}\n    noteService\n      .updateNote(id, changedProduct)\n      .then(returnedProduct => {\n        setProducts(products.map(product => \n          product.id !== id\n            ? product\n            : returnedProduct\n        ))\n      })\n      .catch(error => {\n        setErrorMessage('the product was already deleted from server')\n        setTimeout(() => {\n          setErrorMessage('no errors happened')\n        }, 5000)\n        setProducts(products.filter(p => p.id !== id))\n      })\n  }\n\n  //show products with constraint\n  const productsToShow = showAllProducts\n  ? products\n  : products.filter(product => product.category === 'Electronics')\n  \n  const displayControl = () => {\n      setShowAll(!showAll)\n  }\n\n  console.log('render', products.length, 'products')\n\n  return (\n    <div>\n      <div> \n        <h3> Display existing products </h3>\n        <Notification message={errorMessage}/>\n        <ul>\n          {productsToShow.map(product => \n            <Display key={product.id} product={product}/>\n          )}\n        </ul>\n      </div>\n      <div>\n      <h3> Adding new products </h3>\n      <form onSubmit={addProduct}>\n        <input \n        value={newProductId}\n        onChange={handleProductIdChange}\n        />\n        <button type=\"submit\"> Save </button>\n      </form>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}